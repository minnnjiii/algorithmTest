고려해야 할 것들이 많다. 차근차근 생각해보자.

일단, 0번 노드는 존재하지 않는다. 이것때문에 인덱스가 꼬일 가능성이 크다. 따라서, 처음에 입력받을때부터 1부터 입력받도록 하자.
기저조건은 다음 두 가지를 만족해야만 한다. 만족한다면 minVal 계산
첫 노드에 도달했을 때 (cur == 1)
모든 노드를 방문했을 때 (cnt == n)
그러나, 맨 처음엔 무조건 cur 가 1 이므로, 시작도 못하고 끝나버리는 경우가 발생한다. 따라서, firstFlag 를 하나 넣어주어 첫 진행을 무사히 통과시키도록 하자.
재귀 진행 시엔 0 부터가 아니라 1부터이다. 진행하면서 dis 와 cnt 를 올려준다.
가지치기 조건은 다음과 같다.

이미 방문했을 때 (visited[i])
생각을 좀 해야하는데, 첫 노드에 다시 와야 하므로, 맨 처음 노드에 visited 를 체크하지 않은채로 시작해야한다.
방문 불가능할때 (arr[cur][i] == 0)
방문했지만, 이미 값이 min 을 넘어버렸을 때 (dis > minVal)
당연하다. 더 진행해봤자 min 을 구할 수 없다.
1번에 도달했지만, 아직 모든 노드를 방문하지 않았을 때 (cur == n && cnt ≠ n)
노드를 순회하도록 돌려보내야한다.
